{"ast":null,"code":"import { mapState } from 'vuex';\nimport moment from 'moment';\nexport default {\n  computed: {\n    ...mapState(['ordersList']),\n    headers() {\n      return [{\n        text: '№ Заявки',\n        value: 'num'\n      }, {\n        text: 'Продукт',\n        value: 'stg'\n      }, {\n        text: 'Дата',\n        value: 'dadd'\n      }, {\n        text: 'Клиент',\n        value: 'client_name'\n      }, {\n        text: 'Статус',\n        value: 'state'\n      }, {\n        text: 'Телефон',\n        value: 'person_phone'\n      }];\n    }\n  },\n  methods: {\n    formatDate(date) {\n      return moment(date).format('DD.MM.YYYY HH:mm');\n    },\n    statusClass(status) {\n      return {\n        'status-init': status === 'init',\n        'status-error': status === 'error',\n        'status-upload_docs': status === 'upload_docs',\n        'status-process': status === 'process',\n        'status-reupload_fls': status === 'reupload_fls'\n      };\n    },\n    openOrderDetails({\n      item\n    }) {\n      this.$store.dispatch('fetchOrderDetails', item.id).then(() => {\n        this.$root.$emit('open-order-tab', this.$store.state.currentOrder);\n      }).catch(error => {\n        console.error('Ошибка при загрузке данных заявки:', error);\n      });\n    },\n    openDialog(item) {\n      debugger;\n      this.dialogTitle = item ? 'Редактирование заявки' : 'Создание новой заявки';\n      this.editedItem = item ? Object.assign({}, item) : {};\n      this.dialog = true;\n    },\n    closeDialog() {\n      this.dialog = false;\n      this.$refs.form.reset();\n    },\n    saveItem() {\n      if (this.$refs.form.validate()) {\n        if (this.editedItem.id) {\n          // Редактирование существующей заявки\n          // Реализуйте логику редактирования заявки\n        } else {\n          // Создание новой заявки\n          // Реализуйте логику добавления новой заявки\n        }\n        this.closeDialog();\n      }\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchOrdersList');\n  }\n};","map":{"version":3,"names":["mapState","moment","computed","headers","text","value","methods","formatDate","date","format","statusClass","status","openOrderDetails","item","$store","dispatch","id","then","$root","$emit","state","currentOrder","catch","error","console","openDialog","dialogTitle","editedItem","Object","assign","dialog","closeDialog","$refs","form","reset","saveItem","validate","mounted"],"sources":["src/components/MyComponent1.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h2>Список заявок</h2>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"ordersList\"\n      class=\"elevation-1\"\n    >\n      <template #[`item.stg`]=\"{ item }\">\n        <span>{{ item.stg.join(', ') }}</span>\n      </template>\n      <template #[`item.dadd`]=\"{ item }\">\n        <span>{{ formatDate(item.dadd) }}</span>\n      </template>\n      <template #[`item.state`]=\"{ item }\">\n        <span :class=\"statusClass(item.state)\">{{ item.state }}</span>\n      </template>\n    </v-data-table>\n    <v-dialog v-model=\"dialog\" max-width=\"600px\">\n      <v-card>\n        <v-card-title>\n          {{ dialogTitle }}\n        </v-card-title>\n        <v-card-text>\n          <v-form ref=\"form\">\n            <v-text-field v-model=\"editedItem.num\" label=\"№ Заявки\"></v-text-field>\n            <v-text-field v-model=\"editedItem.client_name\" label=\"Клиент\"></v-text-field>\n            <v-text-field v-model=\"editedItem.person_phone\" label=\"Телефон\"></v-text-field>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"blue darken-1\" text @click=\"closeDialog\">Отмена</v-btn>\n          <v-btn color=\"blue darken-1\" text @click=\"saveItem\">Сохранить</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-btn color=\"primary\" @click=\"openDialog\">Добавить заявку</v-btn>\n  </div>\n</template>\n  \n  <script>\n  import { mapState } from 'vuex';\n  import moment from 'moment';\n  \n  export default {\n    computed: {\n      ...mapState(['ordersList']),\n      headers() {\n        return [\n          { text: '№ Заявки', value: 'num' },\n          { text: 'Продукт', value: 'stg' },\n          { text: 'Дата', value: 'dadd' },\n          { text: 'Клиент', value: 'client_name' },\n          { text: 'Статус', value: 'state' },\n          { text: 'Телефон', value: 'person_phone' }\n       ];\n      }\n    },\n    methods: {\n      formatDate(date) {\n        return moment(date).format('DD.MM.YYYY HH:mm');\n      },\n      statusClass(status) {\n        return {\n          'status-init': status === 'init',\n          'status-error': status === 'error',\n          'status-upload_docs': status === 'upload_docs',\n          'status-process': status === 'process',\n          'status-reupload_fls': status === 'reupload_fls',\n        };\n      },\n      openOrderDetails({ item }) {\n      this.$store.dispatch('fetchOrderDetails', item.id)\n        .then(() => {\n          this.$root.$emit('open-order-tab', this.$store.state.currentOrder);\n        })\n        .catch(error => {\n          console.error('Ошибка при загрузке данных заявки:', error);\n        });\n      },\n      \n      openDialog(item) {\n        debugger;\n        this.dialogTitle = item ? 'Редактирование заявки' : 'Создание новой заявки';\n        this.editedItem = item ? Object.assign({}, item) : {};\n        this.dialog = true;\n      },\n      closeDialog() {\n        this.dialog = false;\n        this.$refs.form.reset(); \n      },\n      saveItem() {\n        if (this.$refs.form.validate()) {\n          if (this.editedItem.id) {\n            // Редактирование существующей заявки\n            // Реализуйте логику редактирования заявки\n          } else {\n            // Создание новой заявки\n            // Реализуйте логику добавления новой заявки\n        }\n        this.closeDialog();\n        }\n      },\n    },\n    mounted() {\n      this.$store.dispatch('fetchOrdersList');\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .container {\n    padding: 20px;\n  }\n  \n  h2 {\n    margin-bottom: 20px;\n    text-align: center;\n  }\n\n  .v-data-footer {\n    display: flex;\n    justify-content: flex-end; \n  }\n\n  .v-data-footer__pagination,\n  .v-data-footer__select {\n    margin-left: auto; \n  }\n  \n  .status-init {\n    color: #ff6f00; /* Ярко-оранжевый */\n    font-weight: bold;\n    padding: 5px;\n  }\n\n  .status-error {\n    color: #d32f2f; /* Ярко-красный */\n    font-weight: bold;\n    padding: 5px;\n  }\n\n  .status-upload_docs {\n    color: #0288d1; /* Ярко-голубой */\n    font-weight: bold;\n    padding: 5px;\n  }\n\n  .status-process {\n    color: #388e3c; /* Ярко-зеленый */\n    font-weight: bold;\n    padding: 5px;\n  }\n\n  .status-reupload_fls {\n    color: #7b1fa2; /* Ярко-фиолетовый */\n    font-weight: bold;\n    padding: 5px;\n  }\n\n  tr:hover {\n    background-color: #f5f5f5; /* Светло-серый */\n  }\n  </style>\n  "],"mappings":"AA0CA,SAAAA,QAAA;AACA,OAAAC,MAAA;AAEA;EACAC,QAAA;IACA,GAAAF,QAAA;IACAG,QAAA;MACA,QACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,EACA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,IAAA;MACA,OAAAP,MAAA,CAAAO,IAAA,EAAAC,MAAA;IACA;IACAC,YAAAC,MAAA;MACA;QACA,eAAAA,MAAA;QACA,gBAAAA,MAAA;QACA,sBAAAA,MAAA;QACA,kBAAAA,MAAA;QACA,uBAAAA,MAAA;MACA;IACA;IACAC,iBAAA;MAAAC;IAAA;MACA,KAAAC,MAAA,CAAAC,QAAA,sBAAAF,IAAA,CAAAG,EAAA,EACAC,IAAA;QACA,KAAAC,KAAA,CAAAC,KAAA,wBAAAL,MAAA,CAAAM,KAAA,CAAAC,YAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,uCAAAA,KAAA;MACA;IACA;IAEAE,WAAAZ,IAAA;MACA;MACA,KAAAa,WAAA,GAAAb,IAAA;MACA,KAAAc,UAAA,GAAAd,IAAA,GAAAe,MAAA,CAAAC,MAAA,KAAAhB,IAAA;MACA,KAAAiB,MAAA;IACA;IACAC,YAAA;MACA,KAAAD,MAAA;MACA,KAAAE,KAAA,CAAAC,IAAA,CAAAC,KAAA;IACA;IACAC,SAAA;MACA,SAAAH,KAAA,CAAAC,IAAA,CAAAG,QAAA;QACA,SAAAT,UAAA,CAAAX,EAAA;UACA;UACA;QAAA,CACA;UACA;UACA;QAAA;QAEA,KAAAe,WAAA;MACA;IACA;EACA;EACAM,QAAA;IACA,KAAAvB,MAAA,CAAAC,QAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}