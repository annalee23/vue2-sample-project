{"ast":null,"code":"import { mapState } from 'vuex';\nimport moment from 'moment';\nexport default {\n  computed: {\n    ...mapState(['ordersList'])\n  },\n  methods: {\n    formatDate(date) {\n      return moment(date).format('DD.MM.YYYY HH:mm');\n    },\n    statusClass(status) {\n      return {\n        'status-init': status === 'init',\n        'status-error': status === 'error',\n        'status-upload_docs': status === 'upload_docs',\n        'status-process': status === 'process',\n        'status-reupload_fls': status === 'reupload_fls'\n      };\n    }\n  },\n  openOrderDetails(orderId) {\n    this.$store.dispatch('fetchOrderDetails', orderId).then(() => {\n      this.$emit('open-order-tab');\n    }).catch(error => {\n      console.error('Ошибка при загрузке данных заявки:', error);\n    });\n  },\n  mounted() {\n    this.$store.dispatch('fetchOrdersList');\n  }\n};","map":{"version":3,"names":["mapState","moment","computed","methods","formatDate","date","format","statusClass","status","openOrderDetails","orderId","$store","dispatch","then","$emit","catch","error","console","mounted"],"sources":["src/components/MyComponent1.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <h2>Список заявок</h2>\n      <div class=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th>№ Заявки</th>\n              <th>Продукт</th>\n              <th>Дата</th>\n              <th>Клиент</th>\n              <th>Статус</th>\n              <th>Телефон</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"order in ordersList\" :key=\"order.id\" @click=\"openOrderDetails(order.id)\">\n              <td>{{ order.num }}</td>\n              <td>{{ order.stg.join(', ') }}</td>\n              <td>{{ formatDate(order.dadd) }}</td>\n              <td>{{ order.client_name }}</td>\n              <td :class=\"statusClass(order.state)\">{{ order.state }}</td>\n              <td>{{ order.person_phone }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { mapState } from 'vuex';\n  import moment from 'moment';\n\n  \n  export default {\n    computed: {\n      ...mapState(['ordersList'])\n    },\n    methods: {\n    formatDate(date) {\n      return moment(date).format('DD.MM.YYYY HH:mm');\n    },\n    statusClass(status) {\n      return {\n        'status-init': status === 'init',\n        'status-error': status === 'error',\n        'status-upload_docs': status === 'upload_docs',\n        'status-process': status === 'process',\n        'status-reupload_fls': status === 'reupload_fls',\n      };\n    }\n  },\n  openOrderDetails(orderId) {\n    this.$store.dispatch('fetchOrderDetails', orderId)\n    .then(() => {\n          this.$emit('open-order-tab');\n        })\n        .catch(error => {\n          console.error('Ошибка при загрузке данных заявки:', error);\n        });\n  },\n  mounted() {\n    this.$store.dispatch('fetchOrdersList');\n  }\n};\n</script>\n  \n\n\n<style scoped>\n.container {\n  padding: 20px;\n}\n\nh2 {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.table-container {\n  margin-top: 30px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  table-layout: fixed;\n}\n\nth, td {\n  border: 1px solid #dddddd;\n  text-align: left;\n  padding: 12px;\n  word-wrap: break-word;\n  cursor: pointer; \n\n}\n\nth {\n  background-color: #f2f2f2;\n  position: sticky;\n  top: 0;\n  background: #fff;\n}\n\n.status-init {\n  background-color: #ffe0b2; /* Оранжевый */\n}\n\n.status-error {\n  background-color: #ffccbc; /* Персиковый */\n}\n\n.status-upload_docs {\n  background-color: #b2ebf2; /* Голубой */\n}\n\n.status-process {\n  background-color: #c8e6c9; /* Зеленый */\n}\n\n.status-reupload_fls {\n  background-color: #e1bee7; /* Фиолетовый */\n}\n\ntr:hover {\n  background-color: #f5f5f5; /* Светло-серый */\n}\n</style>\n  "],"mappings":"AA+BA,SAAAA,QAAA;AACA,OAAAC,MAAA;AAGA;EACAC,QAAA;IACA,GAAAF,QAAA;EACA;EACAG,OAAA;IACAC,WAAAC,IAAA;MACA,OAAAJ,MAAA,CAAAI,IAAA,EAAAC,MAAA;IACA;IACAC,YAAAC,MAAA;MACA;QACA,eAAAA,MAAA;QACA,gBAAAA,MAAA;QACA,sBAAAA,MAAA;QACA,kBAAAA,MAAA;QACA,uBAAAA,MAAA;MACA;IACA;EACA;EACAC,iBAAAC,OAAA;IACA,KAAAC,MAAA,CAAAC,QAAA,sBAAAF,OAAA,EACAG,IAAA;MACA,KAAAC,KAAA;IACA,GACAC,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,uCAAAA,KAAA;IACA;EACA;EACAE,QAAA;IACA,KAAAP,MAAA,CAAAC,QAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}