{"ast":null,"code":"import { mapState } from 'vuex';\nimport moment from 'moment';\nexport default {\n  computed: {\n    ...mapState(['meetingsList'])\n  },\n  methods: {\n    formatDate(date) {\n      return moment(date).format('DD.MM.YYYY HH:mm');\n    },\n    statusClass(status) {\n      return {\n        'status-init': status === 'init',\n        'status-error': status === 'error',\n        'status-upload_docs': status === 'upload_docs',\n        'status-process': status === 'process',\n        'status-reupload_fls': status === 'reupload_fls'\n      };\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchMeetingsList');\n  }\n};","map":{"version":3,"names":["mapState","moment","computed","methods","formatDate","date","format","statusClass","status","mounted","$store","dispatch"],"sources":["src/components/MyComponent2.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <h2>Открытие счетов</h2>\n      <div class=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th>Город</th>\n              <th>Клиент</th>\n              <th>Банк</th>\n              <th>Продукт</th>\n              <th>Статус</th>\n              <th>Дата встречи</th>\n              <th>Место встречи</th>\n              <th>Телефон</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"meeting in meetingsList\" :key=\"meeting.id\">\n              <td>{{ meeting.client_city }}</td>\n              <td>{{ meeting.client_name }}</td>\n              <td>{{ meeting.bank_name }}</td>\n              <td>{{ meeting.stg.join(', ') }}</td>\n              <td :class=\"statusClass(meeting.meeting_state)\">{{ meeting.meeting_state }}</td>\n              <td>{{ formatDate(meeting.meeting_date) }}</td>\n              <td>{{ meeting.meeting_place }}</td>\n              <td>{{ meeting.person_phone }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { mapState } from 'vuex';\n  import moment from 'moment';\n\n  \n  export default {\n    computed: {\n      ...mapState(['meetingsList'])\n    },\n    methods: {\n    formatDate(date) {\n      return moment(date).format('DD.MM.YYYY HH:mm');\n    },\n    statusClass(status) {\n      return {\n        'status-init': status === 'init',\n        'status-error': status === 'error',\n        'status-upload_docs': status === 'upload_docs',\n        'status-process': status === 'process',\n        'status-reupload_fls': status === 'reupload_fls',\n      };\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchMeetingsList');\n  }\n  };\n  </script>\n  \n  <style scoped>\n  .container {\n    padding: 20px;\n  }\n  \n  h2 {\n    margin-bottom: 20px;\n    text-align: center;\n  }\n  \n  .table-container {\n    margin-top: 30px;\n    overflow-x: auto; \n  }\n  \n  table {\n    width: 100%;\n    border-collapse: collapse;\n    table-layout: fixed; \n  }\n  \n  th, td {\n    border: 1px solid #dddddd;\n    text-align: left;\n    padding: 12px;\n    word-wrap: break-word;\n  }\n  \n  th {\n    background-color: #f2f2f2;\n    position: sticky;\n    top: 0; \n    background: #fff;\n  }\n\n  .status-init {\n  background-color: #ffe0b2; /* Оранжевый */\n}\n\n.status-error {\n  background-color: #ffccbc; /* Персиковый */\n}\n\n.status-upload_docs {\n  background-color: #b2ebf2; /* Голубой */\n}\n\n.status-process {\n  background-color: #c8e6c9; /* Зеленый */\n}\n\n.status-reupload_fls {\n  background-color: #e1bee7; /* Фиолетовый */\n}\n  </style>\n  "],"mappings":"AAmCA,SAAAA,QAAA;AACA,OAAAC,MAAA;AAGA;EACAC,QAAA;IACA,GAAAF,QAAA;EACA;EACAG,OAAA;IACAC,WAAAC,IAAA;MACA,OAAAJ,MAAA,CAAAI,IAAA,EAAAC,MAAA;IACA;IACAC,YAAAC,MAAA;MACA;QACA,eAAAA,MAAA;QACA,gBAAAA,MAAA;QACA,sBAAAA,MAAA;QACA,kBAAAA,MAAA;QACA,uBAAAA,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,MAAA,CAAAC,QAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}